<%= render 'form_errors' %>

<!--
  Information about Bootstrap tabs
  https://getbootstrap.com/docs/5.0/components/navs-tabs/
  https://getbootstrap.com/docs/5.0/components/navs-tabs/#javascript-behavior
-->
<div class="d-flex align-items-start">

<%= render  partial: 'form_nav', locals:  { additional_selected: false, required_selected: true,
                                            additional_button_class: "", required_button_class: "show active" }  %>

  <div>
    <%= form_with(model: @work, class: ["work-form"], data: { work: @work.form_attributes }) do |form| %>
      <%= render partial: 'form_metadata', locals:  { form: form, required_class: "show active", additional_class: "" } %>


      <hr />
      <div class="deposit-uploads">
        <% if @work.approved? %>
          <section class="uploads">
            <h2 class="h2"><%= t('works.uploads.post_curation.heading') %></h2>
            <%= render(partial: 'works/s3_resources', locals: { edit_mode: false }) %>
          </section>
        <% else %>
          <section class="uploads">
            <h2 class="h2"><%= t('works.uploads.post_curation.heading') %></h2>
            <%= render(partial: 'works/s3_resources', locals: { edit_mode: true, form: form }) %>
          </section>
          <div class="container-fluid deposit-uploads">

            <% if @new_uploader == true %>
              <!-- Uses Uppy for uploading -->
              <div id="file-upload-area"></div>
              <button id="add-files-button" class="btn btn-secondary" style="width: 200px;"><i class="bi bi-plus-circle"></i> Add More Files</button>
            <% else %>
              <!-- Uses the browser's default file upload controls -->
              <%= form.label("Choose files to attach to this work", for: :pre_curation_uploads_added) %>
              <%= form.file_field(:pre_curation_uploads_added, id: "pre_curation_uploads_added", multiple: true) %>
              <!-- We populate this via JavaScript as the user selected files to upload -->
              <div id="file-upload-list"></div>
            <% end %>
            <div id="file-error" class="error_box"></div>
          </div>
        <% end %>
      </div>

      <hr />
      <div class="actions">
        <%= link_to 'Cancel', @work, class: "btn btn-secondary" %>
        <% if @work.persisted? %>
          <%= form.submit "Save Work", class: "btn btn-primary wizard-next-button", id: "btn-submit" %>
        <% else %>
          <%= form.submit (migrating? ? "Migrate" : "Create"), class: "btn btn-primary wizard-next-button", id: "btn-submit", name: "submit" %>
        <% end %>
      </div>

      <%= render 'form_hidden_fields' %>
    <% end %>
  </div>
</div>

<!--
  Only render the Uppy JavaScript if we are using it.
  This also prevents the call to `work_upload_files_path(@work)` when the `work.id` is nil
  which happens when migrating a dataset from DataSpace.
-->
<% if @new_uploader == true %>
<script>
  // Setup Uppy to handle file uploads
  // References:
  //    https://davidwalsh.name/uppy-file-uploading
  //    https://uppy.io/blog/2018/08/0.27/#autoproceed-false-by-default
  var uppy = Uppy.Core({ autoProceed: true })

  // Configure the initial display
  // https://uppy.io/docs/dashboard
  uppy.use(Uppy.Dashboard, {
    target: '#file-upload-area',
    inline: false, // display of dashboard only when trigger is clicked
    trigger: "#add-files-button"
  })

  // We use the XHRUploader - this is the most basic
  // https://uppy.io/docs/xhr-upload/
  // X-CSRF-Token: https://stackoverflow.com/a/75050497/446681
  uppy.use(Uppy.XHRUpload, {
    endpoint: '<%= work_upload_files_path(@work) %>',
    headers: {
        'X-CSRF-Token': document.querySelector("meta[name='csrf-token']").content
    },
    bundle: true,   // upload all selected files at once
    formData: true, // required when bundle: true
    getResponseData: function(responseText, response) {
      // Reload the file list displayed
      let fileTable = $('#files-table').dataTable();
      fileTable.api().ajax.reload();
    }
  })

  $("#add-files-button").on("click", function(_x) {
    // Prevent the button's click from submitting the form
    return false;
  })
</script>
<% end %>
